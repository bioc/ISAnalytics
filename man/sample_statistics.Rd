% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis-functions.R
\name{sample_statistics}
\alias{sample_statistics}
\title{Computes user specified functions on numerical columns and updates
the metadata data frame accordingly.}
\usage{
sample_statistics(
  x,
  metadata,
  sample_key = "CompleteAmplificationID",
  value_columns = "Value",
  functions = default_stats()
)
}
\arguments{
\item{x}{A data frame}

\item{metadata}{The metadata data frame}

\item{sample_key}{Character vector representing the key for identifying
a sample}

\item{value_columns}{THe name of the columns to be computed,
must be numeric or integer}

\item{functions}{A named list of function or purrr-style lambdas}
}
\value{
A list with modified x and metadata data frames
}
\description{
\lifecycle{experimental}
The function operates on a data frame by grouping the content by
the sample key and computing every function specified on every
column in the \code{value_columns} parameter. After that the metadata
data frame is updated by including the computed results as columns
for the corresponding key.
For this reason it's required that both \code{x} and \code{metadata} have the
same sample key, and it's particularly important if the user is
working with previously aggregated data.
For example:\if{html}{\out{<div class="r">}}\preformatted{### Importing association file and matrices
path_AF <- system.file("extdata", "ex_association_file.tsv",
package = "ISAnalytics")
root_correct <- system.file("extdata", "fs.zip",
package = "ISAnalytics")
root_correct <- unzip_file_system(root_correct, "fs")

association_file <- import_association_file(path_AF, root_correct)
matrices <- import_parallel_Vispa2Matrices_auto(
association_file = association_file , root = NULL,
quantification_type = c("seqCount","fragmentEstimate"),
matrix_type = "annotated", workers = 2, patterns = NULL,
matching_opt = "ANY", dates_format = "dmy")

### Aggregating data (both by same key)
aggreggated_x <- aggregate_values_by_key(matrices$seqCount,
association_file)
aggregated_meta <- aggregate_metadata(association_file)

### Sample statistics
sample_stats <- sample_statistics(x = aggregated_x,
metadata = aggregated_meta,
sample_key = c("SubjectID", "CellMarker","Tissue", "TimePoint"))

}\if{html}{\out{</div>}}
}
\examples{
op <- options(ISAnalytics.widgets = FALSE)

path_AF <- system.file("extdata", "ex_association_file.tsv",
    package = "ISAnalytics"
)
root_correct <- system.file("extdata", "fs.zip",
    package = "ISAnalytics"
)
root_correct <- unzip_file_system(root_correct, "fs")

association_file <- import_association_file(path_AF, root_correct,
    dates_format = "dmy"
)
matrices <- import_parallel_Vispa2Matrices_auto(
    association_file = association_file, root = NULL,
    quantification_type = c("seqCount", "fragmentEstimate"),
    matrix_type = "annotated", workers = 2, patterns = NULL,
    matching_opt = "ANY"
)

stats <- sample_statistics(matrices$seqCount, association_file)
options(op)
}
\seealso{
Other Analysis functions: 
\code{\link{CIS_grubbs}()},
\code{\link{comparison_matrix}()},
\code{\link{compute_abundance}()},
\code{\link{cumulative_count_union}()},
\code{\link{separate_quant_matrices}()},
\code{\link{threshold_filter}()},
\code{\link{top_integrations}()}
}
\concept{Analysis functions}
